/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul,
ol {
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

:root {
  /* Typography 
  ---------------*/
  --fw-100: 300;
  --fw-200: 400;
  --fw-300: 500;

  --fs--200: 0.75rem;
  --fs--100: 0.95rem;
  --fs-base: 1.125rem;
  --fs-100: 1.5rem;
  --fs-200: 1.75rem;

  --ff-sans-normal: "Rubik", sans-serif;

  /* Colors
  ------------ */
  --white: 0 0% 100%;
  --black: 0 0% 0%;
  --orange: 21, 100%, 59%;

  --focus-outline: hsl(var(--orange));

  /* Container widths 
  ----------------------*/
  --w-mobile: 375px;
  --w-desktop: 1440px;
}

body {
  min-height: 100vh;
  line-height: 1.5;
  font-family: var(--ff-sans-normal);
  font-size: var(--fs-base);
  font-weight: var(--fw-100);
  color: hsl(var(--black) / 1);
  background-color: hsl(var(--white));
  position: relative;
}

#root {
  position: relative;
}

h1,
h2,
h3 {
  font-weight: var(--fw-300);
  line-height: 1.1;
  font-size: inherit;
}

p {
  font-weight: var(--fw-200);
}

ul {
  margin: 0;
  padding: 0;
}

a {
  text-decoration: none;
  color: inherit;
}
a:focus {
  outline: 5px solid var(--focus-outline);
}

@media (hover: hover) {
  a {
    cursor: pointer;
  }
}

/* Utility classes
--------------------- */

/* 1. Layouts
--------------- */
.container {
  width: min(100%, var(--w-desktop));
  padding-inline: 1rem;
  padding-block-start: var(--padding-top, 1rem);
  padding-block-end: var(--padding-bottom, 1rem);
  margin-inline: auto;
}

.cluster {
  display: flex;
  flex-direction: var(--direction, row);
  gap: var(--gap, 2rem);
  justify-content: var(--justify, center);
  align-items: var(--align, center);
  flex-wrap: var(--wrap-val, wrap);
}

.sr-only {
  position: absolute;
  left: -10000px;
  top: auto;
  width: 1px;
  height: 1px;
  overflow: hidden;
  white-space: nowrap;
}

.fs--200 {
  font-size: var(--fs--200);
}

.fs--100 {
  font-size: var(--fs--100);
}

.fs-100 {
  font-size: var(--fs-100);
}

.fs-200 {
  font-size: var(--fs-200);
}

.fw-100 {
  font-weight: var(--fw-100);
}

.fw-300 {
  font-weight: var(--fw-300);
}

.rounded-md {
  border-radius: 0.25rem;
}

.rounded-lg {
  border-radius: 0.5rem;
}

.stack-sm > * + * {
  margin-block-start: 0.5rem;
}
.stack-md > * + * {
  margin-block-start: 1rem;
}
.stack-lg > * + * {
  margin-block-start: 3rem;
}

.switcher {
  --threshold: 27rem;
  display: flex;
  flex-wrap: wrap;
  gap: 2rem;
  align-items: center;
}

.switcher > * {
  flex-grow: 1;
  flex-basis: calc((var(--threshold) - 100%) * 999);
}

.grid {
  display: grid;
  gap: var(--gap, 2rem);
  grid-template-columns: repeat(
    auto-fit,
    minmax(min(var(--minimum, 20rem), 100%), 1fr)
  );
}

.positioned-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

[data-overflow-x="scroll"] {
  overflow-x: scroll;
}

.border-trbl {
  border: var(--border-width, 2px) solid
    var(--border-color, hsl(var(--black) / 0.1));
}

.border-b {
  border-block-end: var(--border-width, 2px) solid
    var(--border-color, hsl(var(--black) / 0.1));
}

.border-t {
  border-block-start: var(--border-width, 2px) solid
    var(--border-color, hsl(var(--black) / 0.1));
}

/* 2. Blocks
----------- */
.button {
  border: 1px solid transparent;
  color: white;
  font-weight: var(--fw-300);
  order: 1;
  padding-inline: 1em;
  padding-block: 0.5em;
  background-color: var(--button-bg-normal, hsl(var(--black) / 1));
  transition: background-color 150ms ease-in-out;
}

.button:focus {
  outline: 3px solid var(--focus-outline);
}

.button[data-state="inverted"] {
  --button-bg-normal: transparent;
  --button-bg-hover: hsl(var(--black) / 0.1);
  color: hsl(var(--black));
}

@media (hover: hover) {
  .button {
    cursor: pointer;
  }

  .button:hover {
    background-color: var(--button-bg-hover, hsl(var(--black) / 0.8));
  }
}

.bg-orange {
  background-color: hsl(var(--orange));
}

.text-dark {
  color: hsl(var(--black) / 0.8);
}

.text-grey {
  color: hsl(var(--black) / 0.5);
}

.text-white {
  color: hsl(var(--white) / 0.95);
}

.text-centered {
  text-align: center;
}
